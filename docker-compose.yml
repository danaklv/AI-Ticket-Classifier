version: '3.9'

services:
  broker:
    image: apache/kafka:3.7.1  # стабильная версия
    container_name: broker
    restart: unless-stopped
    ports:
      - "9094:9094"
    environment:
      # --- Основное ---
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # --- Listeners ---
      # Внутри Docker — PLAINTEXT
      # Снаружи (Windows / Host) — PLAINTEXTHOST
      KAFKA_LISTENERS: "PLAINTEXT://:9092,PLAINTEXTHOST://:9094,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:9092,PLAINTEXTHOST://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXTHOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      # --- Dev-настройки ---
      KAFKA_NUM_PARTITIONS: "3"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CLUSTER_ID: "my-cluster-id"

    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - app-network


  db:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dana123
      POSTGRES_DB: classifierdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "classifierdb", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  api-service:
    build: ./api
    container_name: go-service
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: postgres
      DB_PASSWORD: dana123
      DB_NAME: classifierdb

      # Kafka — внутри docker-сети нужно ходить по имени сервиса broker:9092
      KAFKA_BROKER: broker:9092
      # оставляю твои имена топиков
      KAFKA_PRODUCER_TOPIC: tickets
      KAFKA_CONSUMER_TOPIC: classified_tickets
    ports:
      - "8080:8080"
    networks:
      - app-network

  ml-service:
    build: ./ml
    container_name: python-service
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
    environment:
      KAFKA_BROKER: broker:9092
    ports:
      - "8000:8000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  kafka-data:
  pgdata:
